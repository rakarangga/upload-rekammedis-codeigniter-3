<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Pasien extends Restfull_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();

        
        $this->load->model('Berkas_m');
        $this->load->model('Pasien_m');
        $this->methods['pasiens_get']['limit'] = 500; // 500 requests per hour per pasien/key
        $this->methods['pasiens_post']['limit'] = 100; // 100 requests per hour per pasien/key
        $this->methods['pasiens_delete']['limit'] = 50; // 50 requests per hour per pasien/key
    }

    public function index_get()
    {
        
        // $pasiens = [
        //     ['id' => 1, 'name' => 'John', 'email' => 'john@example.com', 'fact' => 'Loves coding'],
        //     ['id' => 2, 'name' => 'Jim', 'email' => 'jim@example.com', 'fact' => 'Developed on CodeIgniter'],
        //     ['id' => 3, 'name' => 'Jane', 'email' => 'jane@example.com', 'fact' => 'Lives in the USA', ['hobbies' => ['guitar', 'cycling']]],
        // ];
        $all = $this->Pasien_m->get();
        $pasiens =  $all;
        $id = $this->get('id');

        // If the id parameter doesn't exist return all the pasiens
        if ($id === NULL)
        {
            // Check if the pasiens data store contains pasiens (in case the database result returns NULL)
            if ($pasiens)
            {
                // Set the response and exit
                $this->response([
                    'status' => TRUE,
                    'error' => '',
                    'pasien' => $pasiens
                ], Restfull_Controller::HTTP_OK); // OK (200) being the HTTP response code
            }
            else
            {
                // Set the response and exit
                $this->response([
                    'status' => FALSE,
                    'error' => 'Tidak Tersedia'
                ], Restfull_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
            }
        }

        // Find and return a single record for a particular pasien.
        else {
            $id = (int) $id;

            // Validate the id.
            if ($id <= 0)
            {
                // Invalid id, set the response and exit.
                $this->response(NULL, Restfull_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
            }

            // Get the pasien from the array, using the id as key for retrieval.
            // Usually a model is to be used for this.
           
            $pasien = NULL;

            if (!empty($pasiens))
            {
                foreach ($pasiens as $value)
                {
                    // dump($value->id);
                    // die();
                    if (isset($value->id) && intval($value->id) === $id)
                    {
                        $pasien = $value;
                    }
                }
            }

            if (!empty($pasien))
            {
                $this->set_response([
                    'status' => TRUE,
                    'error' => '',
                    'pasien' => $pasien
                ], Restfull_Controller::HTTP_OK); // OK (200) being the HTTP response code
            }
            else
            {
                $this->set_response([
                    'status' => FALSE,
                    'error' => 'Tidak Tersedia Pasien'
                ], Restfull_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
            }
        }
    }

    /* public function pasiens_post()
    {
        // $this->some_model->update_pasien( ... );
        $error = [
            'id' => 100, // Automatically generated by the model
            'name' => $this->post('name'),
            'email' => $this->post('email'),
            'error' => 'Added a resource'
        ];

        $this->set_response($error, Restfull_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

    public function pasiens_delete()
    {
        $id = (int) $this->get('id');

        // Validate the id.
        if ($id <= 0)
        {
            // Set the response and exit
            $this->response(NULL, Restfull_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }

        // $this->some_model->delete_something($id);
        $error = [
            'id' => $id,
            'error' => 'Deleted the resource'
        ];

        $this->set_response($error, Restfull_Controller::HTTP_NO_CONTENT); // NO_CONTENT (204) being the HTTP response code
    } */

}
